apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "dspace.fullname" . }}"
  labels:
    app.kubernetes.io/name: {{ template "dspace.name" . }}
    helm.sh/chart: {{ template "dspace.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: dspace
spec:
  replicas: {{ .Values.replicaCount }}
  strategy: {{ toYaml .Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "dspace.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: dspace
  template:
    metadata:
      name: "{{ template "dspace.fullname" . }}"
      labels:
        app.kubernetes.io/name: {{ template "dspace.name" . }}
        helm.sh/chart: {{ template "dspace.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: dspace
    spec:
      {{- with .Values.image.imagePullSecrets }}
      imagePullSecrets: 
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{ toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      containers:
      - name: "{{ template "dspace.fullname" . }}"
        image: "{{ template "dspace.image" . }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
        - 'sh'
        - '-c'
        - |
          apt update && apt install -y inotifywait
          cd /dspace/config
          {{ if .Values.config.loadCommand -}}
          # Get configuration from external store
{{ .Values.config.loadCommand | indent 10 }}
          {{- end -}}
          # Replace default db connection settings with cluster ones
          sed -i 's/jdbc:postgresql:\/\/dspacedb:5432\/dspace/{{ template "dspace.pg-url" . }}/g' local.cfg
          sed -i 's/http:\/\/localhost:8080\/solr/{{ template "dspace.solr-url" . }}/g' local.cfg
          catalina.sh run &
          while inotifywait -q .; do kill $PID; tail -F -n 0 /dspace/log/dspace.log* & PID=$!; done
        env:
        - name: "JAVA_MEM"
          value: "-Xmx{{ .Values.javaMem }}"
        {{ if .Values.javaOpts -}}
        - name: "JAVA_OPTS"
          value: {{ .Values.javaOpts | quote }}
        {{ end -}}
        resources: {{ toYaml .Values.resources | nindent 10 }}
        ports:
        - name: http
          containerPort: {{ .Values.service.port }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            scheme: {{ .Values.livenessProbe.scheme | default "HTTP" }}
            path: {{ .Values.livenessProbe.path | default "/xmlui/" }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            scheme: {{ .Values.readinessProbe.scheme | default "HTTP" }}
            path: {{ .Values.readinessProbe.path | default "/xmlui/" }}
            port: {{ .Values.service.port }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        {{- end }}
        volumeMounts:
        - name: assetstore
          mountPath: /dspace/assetstore
        {{- if .Values.config.loadSecret }}
        - name: load-secret
          mountPath: /tmp/loadSecret
          readOnly: true
        {{- end }}
      volumes:
      {{- if .Values.config.loadSecret }}
      - name: load-secret
        secret:
          secretName: {{ .Values.config.loadSecret }}
          defaultMode: 0400
      {{- end }}
      - name: assetstore
        {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (printf "%s-assetstore" (include "dspace.fullname" .)) }}
        {{- else }}
        emptyDir: {}
        {{ end }}